start on starting udev
stop on starting rc RUNLEVEL=[06]

env RUNDIR=/var/run/usbmount
env RUNFILE=".mount"
env MNTPNTDIR=/media
env LINKDIR=/media

pre-start script
    [ ! -e /etc/usbmount/usbmount.conf ] || . /etc/usbmount/usbmount.conf || :

    # Test if the first parameter is in the list given by the second
    # parameter.
    in_list()
    {
        for v in $2; do
            [ "$1" != "$v" ] || return 0
        done
        return 1
    }

    # clean up old not deleted dirs (not fixed mountpoints defined in /etc/fstab)
    fstabdirs=$(while read dev mntdir stuff; do test -n "$mntdir" && printf "%s\n" $mntdir ; done < /etc/fstab; true)

    find "$MNTPNTDIR" -mindepth 1 -maxdepth 1 -type d | \
    while read d
    do
        test "$d" != "$MNTPNTDIR" || continue
        if ! in_list "$d" "$fstabdirs"; then
            { ! mountpoint -q "$d" || [ "$ENABLED" -ne 1 ]; } && rmdir "$d" || :
        fi
    done

    ##clean up symlinks
    find "$MNTPNTDIR" -mindepth 1 -maxdepth 1 -type d | \
    while read f
    do
        [ "$f" != "$MNTPNTDIR" ] || continue
        keep_first=1
        find "$LINKDIR" -mindepth 1 -maxdepth 1 -type l | \
        while read g
        do
            d="$(readlink $g)" || :; d=${d%/}
            if [ "$d" = "$f" ]; then
                if [ $keep_first -eq 1 ]; then
                    keep_first=0; exists=yes
                    continue
                fi
                rm "$g" || :
            fi
        done
    done

    find "$LINKDIR" -mindepth 1 -maxdepth 1 -type l | \
    while read g
    do
        [ -e "$(readlink -f $g)" ] || rm "$g" || :
    done

    # remove all usbmount samba exports 
    for s in $(net conf listshares); do
        [ "$(net conf getparm $s comment)" = usbmount ] || continue
        [ ! -e "$(net conf getparm $s path)" ] || continue
        net conf delshare "$s" ||:
    done
end script

script
    trap "(lockfile-remove $RUNDIR/$RUNFILE;)" 0

    mkdir -p /run/usbmount
    touch /run/usbmount/.active

    [ ! -e /etc/usbmount/usbmount.conf ] || . /etc/usbmount/usbmount.conf || :
    busybox inotifyd - /run/usbmount/.active:e | while read line; do
        lockfile-create --retry 100 $RUNDIR/$RUNFILE || continue
        echo "$(date "+%b %d %T"): proceeding..."

        newmounts=$(awk '{print $2}' /proc/mounts | grep "^$MNTPNTDIR" | sort)
        diff=$(bash -c "diff -B <(echo \"$mounts\") <(echo \"$newmounts\")") || :

        if [ -n "$diff" ]; then
            diff=$(echo "$diff" | awk -F'< ' '{print $2}') || :
            OIFS="$IFS"; IFS='
'
            for d in $diff; do
                if ! mountpoint -q "$d"; then
                    for l in $(find "$LINKDIR" -mindepth 1 -maxdepth 1 -type l); do
                        xl="$(readlink -f $l)" || :; xl=${xl%/}
                        [ $d != $xl ] || rm $l
                    done
                    [ -d "$d" ] && rmdir "$d" || :

                    # remove all usbmount samba exports 
                    for s in $(net conf listshares); do
                        [ "$(net conf getparm $s comment)" = usbmount ] || continue
                        xl="$(net conf getparm $s path)" || :; xl=${xl%/}
                        [ "$xl" = "$d" ] || continue
                        net conf delshare "$s" ||:
                    done
                fi
            done
            IFS="$OIFS"
            mounts="$newmounts"
        fi

        lockfile-remove $RUNDIR/$RUNFILE
    done
end script
